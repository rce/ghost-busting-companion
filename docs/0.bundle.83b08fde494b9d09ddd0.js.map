{"version":3,"sources":["webpack:///./src/App.tsx","webpack:///./src/VerticalHeightHack.ts"],"names":["ghosts","name","evidence","flatten","lists","concat","unique","xs","Array","from","Set","ALL_EVIDENCE","map","g","render","useState","foundEvidence","setEvidence","isFound","e","includes","possibleRemainingClues","filter","every","className","classNames","push","join","onClick","without","_","toggleEvidence","document","getElementById","setCustomVHProperty","vh","window","innerHeight","documentElement","style","setProperty","addEventListener"],"mappings":"y2BAAA,cACA,OACA,KAYA,IAAMA,EAAkB,CACtB,CAAEC,KAAM,QAASC,SAAU,CAAC,aAAc,eAAgB,iBAC1D,CAAED,KAAM,QAASC,SAAU,CAAC,eAAgB,WAAY,eACxD,CAAED,KAAM,WAAYC,SAAU,CAAC,WAAY,WAAY,aACvD,CAAED,KAAM,aAAcC,SAAU,CAAC,aAAc,eAAgB,aAC/D,CAAED,KAAM,UAAWC,SAAU,CAAC,WAAY,eAAgB,aAC1D,CAAED,KAAM,QAASC,SAAU,CAAC,aAAc,WAAY,aACtD,CAAED,KAAM,OAAQC,SAAU,CAAC,aAAc,WAAY,aACrD,CAAED,KAAM,WAAYC,SAAU,CAAC,WAAY,eAAgB,iBAC3D,CAAED,KAAM,QAASC,SAAU,CAAC,WAAY,eAAgB,aACxD,CAAED,KAAM,SAAUC,SAAU,CAAC,aAAc,eAAgB,aAC3D,CAAED,KAAM,QAASC,SAAU,CAAC,WAAY,eAAgB,aACxD,CAAED,KAAM,MAAOC,SAAU,CAAC,WAAY,aAAc,iBACpD,CAAED,KAAM,QAASC,SAAU,CAAC,aAAc,WAAY,iBACtD,CAAED,KAAM,QAASC,SAAU,CAAC,eAAgB,WAAY,kBAG1D,SAASC,EAAWC,G,MAAqB,OAAQ,MAAWC,OAAM,QAAID,GACtE,SAASE,EAAUC,GAAgB,OAAOC,MAAMC,KAAK,IAAIC,IAAIH,IAC7D,IAAMI,EAA2BL,EAAOH,EAAQH,EAAOY,KAAI,SAAAC,GAAK,OAAAA,EAAEX,cAyClE,EAAAY,OAAO,yBAvCP,WACQ,MAA+B,EAAAC,SAAqB,IAAnDC,EAAa,KAAEC,EAAW,KAC3BC,EAAU,SAACC,GAAgB,OAAAH,EAAcI,SAASD,IAkBlDE,EACJf,EAAOH,EARuBH,EAC7BsB,QAAO,SAACT,GAAa,OAAAG,EAAcO,OAAM,SAACJ,GAAgB,OAAAN,EAAEX,SAASkB,SAASD,SAC9EP,KAAI,SAACC,GAAa,cACdA,GAAC,CACJX,SAAUW,EAAEX,SAASoB,QAAO,SAACH,GAAgB,OAACD,EAAQC,WAI1BP,KAAI,SAACC,GAAa,OAAAA,EAAEX,cAC/CoB,QAAO,SAACH,GAAgB,OAACD,EAAQC,MAEtC,OACE,+BAAKK,UAAU,iBACZb,EAAaC,KAAI,SAAAO,GAChB,IAAMM,EAAa,CAAC,2BAMpB,OALIT,EAAcI,SAASD,GACzBM,EAAWC,KAAK,SACNL,EAAuBD,SAASD,IAC1CM,EAAWC,KAAK,cAEX,+BAAKF,UAAWC,EAAWE,KAAK,KAAMC,QAAS,WAAM,OA7B3C,SAACT,GACtB,IAAMU,EAAUb,EAAcM,QAAO,SAAAQ,GAAK,OAAAA,GAAKX,KAC3CH,EAAcI,SAASD,GACzBF,EAAYY,GACHR,EAAuBD,SAASD,IACzCF,EAAY,CAACE,GAAGd,OAAOwB,IAwBuCE,CAAeZ,KAAKA,SAM7E,MAAKa,SAASC,eAAe,S,gBCrExC,SAASC,IACP,IAAMC,EAA0B,IAArBC,OAAOC,YAClBL,SAASM,gBAAgBC,MAAMC,YAAY,OAAWL,EAAE,MAG1DC,OAAOK,iBAAiB,SAAUP,GAClCA,M","file":"0.bundle.83b08fde494b9d09ddd0.js","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {render} from \"react-dom\"\nimport \"./VerticalHeightHack.ts\"\n\ntype Evidence\n  = \"EMF_FIVE\"\n  | \"SPIRIT_BOX\"\n  | \"GHOSTWRITING\"\n  | \"GHOSTORB\"\n  | \"FINGERPRINTS\"\n  | \"FREEZING\"\n\n\ntype Ghost = { name: string, evidence: Evidence[] }\nconst ghosts: Ghost[] = [\n  { name: \"henki\", evidence: [\"SPIRIT_BOX\", \"FINGERPRINTS\", \"GHOSTWRITING\"] },\n  { name: \"haamu\", evidence: [\"FINGERPRINTS\", \"FREEZING\", \"SPIRIT_BOX\"] },\n  { name: \"kummitus\", evidence: [\"EMF_FIVE\", \"GHOSTORB\", \"FREEZING\"] },\n  { name: \"räyhähenki\", evidence: [\"SPIRIT_BOX\", \"FINGERPRINTS\", \"GHOSTORB\"] },\n  { name: \"banshee\", evidence: [\"EMF_FIVE\", \"FINGERPRINTS\", \"FREEZING\"] },\n  { name: \"jinni\", evidence: [\"SPIRIT_BOX\", \"GHOSTORB\", \"EMF_FIVE\"] },\n  { name: \"mare\", evidence: [\"SPIRIT_BOX\", \"GHOSTORB\", \"FREEZING\"] },\n  { name: \"revenant\", evidence: [\"EMF_FIVE\", \"FINGERPRINTS\", \"GHOSTWRITING\"] },\n  { name: \"varjo\", evidence: [\"EMF_FIVE\", \"GHOSTWRITING\", \"GHOSTORB\"] },\n  { name: \"demoni\", evidence: [\"SPIRIT_BOX\", \"GHOSTWRITING\", \"FREEZING\"] },\n  { name: \"yurei\", evidence: [\"GHOSTORB\", \"GHOSTWRITING\", \"FREEZING\"] },\n  { name: \"oni\", evidence: [\"EMF_FIVE\", \"SPIRIT_BOX\", \"GHOSTWRITING\"] },\n  { name: \"yokai\", evidence: [\"SPIRIT_BOX\", \"GHOSTORB\", \"GHOSTWRITING\"] },\n  { name: \"hantu\", evidence: [\"FINGERPRINTS\", \"GHOSTORB\", \"GHOSTWRITING\"] },\n]\n\nfunction flatten<T>(lists: T[][]): T[] { return ([] as T[]).concat(...lists) }\nfunction unique<T>(xs: T[]): T[] { return Array.from(new Set(xs)) }\nconst ALL_EVIDENCE: Evidence[] = unique(flatten(ghosts.map(g => g.evidence)))\n\nfunction App() {\n  const [foundEvidence, setEvidence] = useState<Evidence[]>([])\n  const isFound = (e: Evidence) => foundEvidence.includes(e)\n\n  const toggleEvidence = (e: Evidence) => {\n    const without = foundEvidence.filter(_ => _ != e)\n    if (foundEvidence.includes(e)) {\n      setEvidence(without)\n    } else if (possibleRemainingClues.includes(e)) {\n      setEvidence([e].concat(without))\n    }\n  }\n\n  const possibleGhosts: Ghost[] = ghosts\n    .filter((g: Ghost) => foundEvidence.every((e: Evidence) => g.evidence.includes(e)))\n    .map((g: Ghost) => ({\n      ...g,\n      evidence: g.evidence.filter((e: Evidence) => !isFound(e)),\n    }))\n\n  const possibleRemainingClues: Evidence[] =\n    unique(flatten(possibleGhosts.map((g: Ghost) => g.evidence)))\n      .filter((e: Evidence) => !isFound(e))\n\n  return (\n    <div className=\"evidence-grid\">\n      {ALL_EVIDENCE.map(e => {\n        const classNames = [\"evidence-grid--evidence\"]\n        if (foundEvidence.includes(e)) {\n          classNames.push(\"found\")\n        } else if (!possibleRemainingClues.includes(e)) {\n          classNames.push(\"impossible\")\n        }\n        return <div className={classNames.join(\" \")} onClick={() => toggleEvidence(e)}>{e}</div>\n      })}\n    </div>\n  )\n}\n\nrender(<App />, document.getElementById(\"app\"))\n","// This trick is from here:\n// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n//\n// The page should fit the available viewport exactly\n\nfunction setCustomVHProperty() {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`)\n}\n\nwindow.addEventListener(\"resize\", setCustomVHProperty)\nsetCustomVHProperty()\n"],"sourceRoot":""}